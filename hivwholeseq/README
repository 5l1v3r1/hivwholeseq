-------------------------------------------------------------------------------
PIPELINE FOR HIV MISEQ SEQUENCING DATA
-------------------------------------------------------------------------------
LAST UPDATE: Jan 2014.

0. We get three FASTQ files from Joerg/Xi (and the Miseq):
 - read1
 - read2
 - barcode/adapter

CHECKPOINT: quality score along reads. (quality_along_read.py)

1. Demultiplex by adapter and put into separate folders with the adapter IDs and
   sample names. (demultiplex.py)

CHECKPOINT: errors in adapter IDs, quality along read by sample.

2. Preliminary mapping to HXB2, to allow for better filtering immediately afterwards.
   (premap_to_reference.py)

CHECKPOINT: insert size distribution (insert_size_distribution.py --premapped),
            coverage (check_premapped_coverage.py).

3. Trim reads according to:
   - reading into adapters (short inserts only)
   - outer and inner PCR primers
   - quality
   Do not trim yet for good CIGARs, i.e. indels at read edges. They could be simply
   due to distance from the reference (we are going to remap anyway).

   In addition, divide into fragments, keeping BAM format. (trim_and_divide.py)

CHECKPOINT: check coverage (check_divided_coverage.py)

4. Extract subsample of mapped reads and build consensus iteratively.
   (build_consensus_iterative.py)

CHECKPOINT: build a genome-wide consensus and check the consensus in overlapping
            regions. (build_genomewide_consensus.py)

5. Map the full dataset against the final consensus. (map_to_consensus.py)

6. Filter BAM files of unmapped stuff and similia. (filter_mapped_reads.py)

CHECKPOINT: mapping issues, coverage


-------------------------------------------------------------------------------
END OF MAPPING
-------------------------------------------------------------------------------

7. Calculate useful observables: coverage, allele frequencies, mutations.

8. Downstream: do popgen on this.


-------------------------------------------------------------------------------
DIAGRAM
-------------------------------------------------------------------------------
  FULL|SUBSAMPLE

    0
    |
    1
    |
    2
    |
    3
    |\
    | 4
    |/
    5
    |
    6
    |
    7

-------------------------------------------------------------------------------
PHIX ANALYSIS PIPELINE
-------------------------------------------------------------------------------
LAST UPDATE: Jan 2014.

We often spike in some phiX to control for sequencing errors. The scripts for
this pipeline are in the 'phix' folder.

1. map unclassified reads against phiX genome (map_phix.py).

2. filter mapped reads to get read of low-quality stuff (filter_mapped_reads_phix.py).

3. TODO
